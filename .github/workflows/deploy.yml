name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_IMAGE: ai-clothes-fe
  SERVER_PATH: /var/www/ai-clothes-fe

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Build application
        run: npm run build
        env:
          NEXT_TELEMETRY_DISABLED: 1

      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:${{ github.sha }} .
          docker tag ${{ env.DOCKER_IMAGE }}:${{ github.sha }} ${{ env.DOCKER_IMAGE }}:latest

      - name: Save Docker image
        run: docker save ${{ env.DOCKER_IMAGE }}:latest | gzip > image.tar.gz

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "image.tar.gz,docker-compose.prod.yml"
          target: ${{ env.SERVER_PATH }}

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ env.SERVER_PATH }}
            
            # Load Docker image
            docker load < image.tar.gz
            
            # Stop old containers
            docker-compose -f docker-compose.prod.yml down
            
            # Start new containers
            docker-compose -f docker-compose.prod.yml up -d
            
            # Clean up
            rm image.tar.gz
            docker image prune -f
            
            echo "Deployment completed!"

      - name: Health Check
        run: |
          sleep 10
          curl -f http://${{ secrets.SERVER_HOST }}:3000 || exit 1

      - name: Notify on success
        if: success()
        run: echo "🎉 Deployment successful!"

      - name: Notify on failure
        if: failure()
        run: echo "❌ Deployment failed!"
